Query: SELECT * FROM movies INNER JOIN genres ON TRUE

AST: Select {
    select: SelectClause {
        expressions: [],
        labels: [],
    },
    from: Some(
        FromClause {
            items: [
                Join {
                    left: Table {
                        name: "movies",
                        alias: None,
                    },
                    right: Table {
                        name: "genres",
                        alias: None,
                    },
                    type: Inner,
                    predicate: Some(
                        Literal(
                            Boolean(
                                true,
                            ),
                        ),
                    ),
                },
            ],
        },
    ),
    where: None,
    order: [],
    limit: None,
    offset: None,
}

Plan: Plan {
    root: NestedLoopJoin {
        outer: Scan {
            table: "movies",
            alias: None,
        },
        inner: Scan {
            table: "genres",
            alias: None,
        },
        predicate: Some(
            Constant(
                Boolean(
                    true,
                ),
            ),
        ),
        pad: false,
        flip: false,
    },
}

Optimized plan: Plan {
    root: NestedLoopJoin {
        outer: Scan {
            table: "movies",
            alias: None,
        },
        inner: Scan {
            table: "genres",
            alias: None,
        },
        predicate: Some(
            Constant(
                Boolean(
                    true,
                ),
            ),
        ),
        pad: false,
        flip: false,
    },
}

Query: SELECT * FROM movies INNER JOIN genres ON TRUE

Result: ["id", "title", "studio_id", "genre_id", "released", "rating", "ultrahd", "id", "name"]
[Integer(1), String("Stalker"), Integer(1), Integer(1), Integer(1979), Float(8.2), Boolean(false), Integer(1), String("Science Fiction")]
[Integer(1), String("Stalker"), Integer(1), Integer(1), Integer(1979), Float(8.2), Boolean(false), Integer(2), String("Action")]
[Integer(2), String("Sicario"), Integer(2), Integer(2), Integer(2015), Float(7.6), Boolean(true), Integer(1), String("Science Fiction")]
[Integer(2), String("Sicario"), Integer(2), Integer(2), Integer(2015), Float(7.6), Boolean(true), Integer(2), String("Action")]
[Integer(3), String("Primer"), Integer(3), Integer(1), Integer(2004), Float(6.9), Null, Integer(1), String("Science Fiction")]
[Integer(3), String("Primer"), Integer(3), Integer(1), Integer(2004), Float(6.9), Null, Integer(2), String("Action")]
[Integer(4), String("Heat"), Integer(4), Integer(2), Integer(1995), Float(8.2), Boolean(true), Integer(1), String("Science Fiction")]
[Integer(4), String("Heat"), Integer(4), Integer(2), Integer(1995), Float(8.2), Boolean(true), Integer(2), String("Action")]
[Integer(5), String("The Fountain"), Integer(4), Integer(1), Integer(2006), Float(7.2), Boolean(false), Integer(1), String("Science Fiction")]
[Integer(5), String("The Fountain"), Integer(4), Integer(1), Integer(2006), Float(7.2), Boolean(false), Integer(2), String("Action")]
