Query: SELECT * FROM movies, genres WHERE movies.genre_id = genres.id

AST: Select {
    select: SelectClause {
        expressions: [],
    },
    from: Some(
        FromClause {
            items: [
                Table {
                    name: "movies",
                    alias: None,
                },
                Table {
                    name: "genres",
                    alias: None,
                },
            ],
        },
    ),
    where: Some(
        WhereClause(
            Operation(
                Equal(
                    Field(
                        Some(
                            "movies",
                        ),
                        "genre_id",
                    ),
                    Field(
                        Some(
                            "genres",
                        ),
                        "id",
                    ),
                ),
            ),
        ),
    ),
    group_by: None,
    having: None,
    order: [],
    limit: None,
    offset: None,
}

Plan: Plan(
    Filter {
        source: NestedLoopJoin {
            outer: Scan {
                table: "movies",
                alias: None,
                filter: None,
            },
            inner: Scan {
                table: "genres",
                alias: None,
                filter: None,
            },
            predicate: None,
            pad: false,
            flip: false,
        },
        predicate: Equal(
            Field(
                3,
                Some(
                    (
                        Some(
                            "movies",
                        ),
                        "genre_id",
                    ),
                ),
            ),
            Field(
                7,
                Some(
                    (
                        Some(
                            "genres",
                        ),
                        "id",
                    ),
                ),
            ),
        ),
    },
)

Optimized plan: Plan(
    NestedLoopJoin {
        outer: Scan {
            table: "movies",
            alias: None,
            filter: None,
        },
        inner: Scan {
            table: "genres",
            alias: None,
            filter: None,
        },
        predicate: Some(
            Equal(
                Field(
                    3,
                    Some(
                        (
                            Some(
                                "movies",
                            ),
                            "genre_id",
                        ),
                    ),
                ),
                Field(
                    7,
                    Some(
                        (
                            Some(
                                "genres",
                            ),
                            "id",
                        ),
                    ),
                ),
            ),
        ),
        pad: false,
        flip: false,
    },
)

Query: SELECT * FROM movies, genres WHERE movies.genre_id = genres.id

Result: ["id", "title", "studio_id", "genre_id", "released", "rating", "ultrahd", "id", "name"]
[Integer(1), String("Stalker"), Integer(1), Integer(1), Integer(1979), Float(8.2), Null, Integer(1), String("Science Fiction")]
[Integer(2), String("Sicario"), Integer(2), Integer(2), Integer(2015), Float(7.6), Boolean(true), Integer(2), String("Action")]
[Integer(3), String("Primer"), Integer(3), Integer(1), Integer(2004), Float(6.9), Null, Integer(1), String("Science Fiction")]
[Integer(4), String("Heat"), Integer(4), Integer(2), Integer(1995), Float(8.2), Boolean(true), Integer(2), String("Action")]
[Integer(5), String("The Fountain"), Integer(4), Integer(1), Integer(2006), Float(7.2), Boolean(false), Integer(1), String("Science Fiction")]
[Integer(6), String("Solaris"), Integer(1), Integer(1), Integer(1972), Float(8.1), Null, Integer(1), String("Science Fiction")]
[Integer(7), String("Gravity"), Integer(4), Integer(1), Integer(2013), Float(7.7), Boolean(true), Integer(1), String("Science Fiction")]
[Integer(8), String("Blindspotting"), Integer(2), Integer(3), Integer(2018), Float(7.4), Boolean(true), Integer(3), String("Comedy")]
[Integer(9), String("Birdman"), Integer(4), Integer(3), Integer(2014), Float(7.7), Boolean(true), Integer(3), String("Comedy")]
[Integer(10), String("Inception"), Integer(4), Integer(1), Integer(2010), Float(8.8), Boolean(true), Integer(1), String("Science Fiction")]
